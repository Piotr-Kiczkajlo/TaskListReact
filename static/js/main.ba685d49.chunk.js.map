{"version":3,"sources":["Form/index.js","ListButtons/index.js","Tasks/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","length","trim","value","placeholder","onChange","target","type","ListButtons","tasks","hideDone","toggleHideDone","setAllDone","Fragment","onClick","some","done","disabled","every","Tasks","removeTask","toggleDoneTask","map","task","id","content","Section","title","body","extraHeaderContent","Header","Container","children","App","setHideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba685d49.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (newTaskContent.length !== 0) {\r\n      addNewTask(newTaskContent.trim());\r\n    }\r\n    setNewTaskContent(\"\");\r\n  };\r\n  return (\r\n    <form className=\"form\" onSubmit={onFormSubmit}>\r\n      <input\r\n        value={newTaskContent}\r\n        className=\"form__inputField\"\r\n        placeholder=\"Co jest do zrobienia ?\"\r\n        onChange={(event) => setNewTaskContent(event.target.value)}\r\n      />\r\n      <button className=\"form__submitButton\" type=\"submit\">\r\n        Dodaj zadanie\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst ListButtons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n  <div className=\"listButtons\">\r\n    {tasks.length > 0 && (\r\n      <React.Fragment>\r\n        <button onClick={toggleHideDone} className=\"manageTasksButton\">\r\n          {tasks.some(({ done }) => done) && hideDone\r\n            ? \"Poka≈º uko≈Ñczone\"\r\n            : \"Ukryj uko≈Ñczone\"}\r\n        </button>\r\n        <button onClick={setAllDone}\r\n          className=\"manageTasksButton\"\r\n          disabled={tasks.every(({ done }) => done)}\r\n        >\r\n          Uko≈Ñcz wszystkie\r\n        </button>\r\n      </React.Fragment>\r\n    )}\r\n  </div>\r\n);\r\nexport default ListButtons;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleDoneTask }) => (\r\n  <ul className=\"list\">\r\n    {tasks.map((task) => (\r\n      <li\r\n        key={task.id}\r\n        className={`list__item ${\r\n          task.done && hideDone ? \"list__item--hide\" : \"\"\r\n        }`}\r\n      >\r\n        <button\r\n          onClick={() => toggleDoneTask(task.id)}\r\n          className=\"list__toggleButton list__toggleButton--check\"\r\n        >\r\n          {task.done ? \"‚úî\" : \"\"}\r\n        </button>\r\n        <span\r\n          className={`list__item--content ${\r\n            task.done ? \"list__item--done\" : \"\"\r\n          }`}\r\n        >\r\n          {task.content}\r\n        </span>\r\n        <button\r\n          onClick={() => removeTask(task.id)}\r\n          className=\"list__toggleButton list__toggleButton--delete\"\r\n        >\r\n          üóëÔ∏è\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <section className=\"section\">\r\n    <header className=\"section__header\">\r\n      <h2 className=\"section__listTitle\">{title}</h2>\r\n      {extraHeaderContent}\r\n    </header>\r\n    <div className=\"section__body \">{body}</div>\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nconst Header = ({ title }) => (\r\n  <header>\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n  <main className=\"container\">{children}</main>\r\n);\r\nexport default Container;\r\n","import React, { useState } from \"react\";\nimport Form from \"./Form\";\nimport ListButtons from \"./ListButtons\";\nimport Tasks from \"./Tasks\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const toggleHideDone = () => {\n    setHideDone((hideDone) => !hideDone);\n  };\n  const removeTask = (id) => {\n    setTasks((tasks) => tasks.filter((task) => task.id !== id));\n  };\n  const toggleDoneTask = (id) => {\n    setTasks((tasks) =>\n      tasks.map((task) => {\n        if (task.id === id) {\n          return { ...task, done: !task.done };\n        }\n        return task;\n      })\n    );\n  };\n  const setAllDone = () => {\n    setTasks((tasks) => tasks.map((task) => ({ ...task, done: true })));\n  };\n  const addNewTask = (content) => {\n    setTasks((tasks) => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\n      },\n    ]);\n  };\n\n  return (\n    <Container>\n      <Header title=\"Lista zada≈Ñ\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n      <Section\n        title=\"Lista zada≈Ñ\"\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleDoneTask={toggleDoneTask}\n          />\n        }\n        extraHeaderContent={\n          <ListButtons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}